name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'LICENSE'
      - '**/*.drawio'
      - '**/*.jpg'
      - '**/*.png'
      - '**/README.md'
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'LICENSE'
      - '**/*.drawio'
      - '**/*.jpg'
      - '**/*.png'
      - '**/README.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    needs: fmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bin:
          - description: "QuinLED Dig Quad"
            target: "xtensa-esp32-none-elf"
            working-directory: "./quinled_dig_quad"
          - description: "Micro:bit V2"
            target: "thumbv7em-none-eabihf"
            working-directory: "./microbit_v2"

    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - if: matrix.bin.target == 'thumbv7em-none-eabihf'
      name: Install ${{ matrix.bin.target }} target
      run: rustup target add ${{ matrix.bin.target }}

    - if: matrix.bin.target == 'xtensa-esp32-none-elf'
      name: Install ${{ matrix.bin.target }} toolchain and target
      uses: esp-rs/xtensa-toolchain@v1.5
      with:
        default: true
        buildtargets: esp32
        ldproxy: false

    - name: Build for ${{ matrix.bin.description }}
      working-directory: ${{ matrix.bin.working-directory }}
      run: cargo build

  clippy:
    needs: fmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bin:
          - description: "QuinLED Dig Quad"
            target: "xtensa-esp32-none-elf"
            working-directory: "./quinled_dig_quad"
          - description: "Micro:bit V2"
            target: "thumbv7em-none-eabihf"
            working-directory: "./microbit_v2"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - if: matrix.bin.target == 'thumbv7em-none-eabihf'
        name: Install ${{ matrix.bin.target }} target
        run: rustup target add ${{ matrix.bin.target }}

      - if: matrix.bin.target == 'xtensa-esp32-none-elf'
        name: Install ${{ matrix.bin.target }} toolchain and target
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32
          ldproxy: false

      - name: Run cargo clippy for ${{ matrix.bin.description }}
        working-directory: ${{ matrix.bin.working-directory }}
        run: cargo clippy --all-features -- -D warnings

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
